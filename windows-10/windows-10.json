{
  "variables": {
    "vcenterNL":                   "{{env `packer_vcenterNL`}}",
    "vcenterUK":                   "{{env `packer_vcenterUK`}}",
    "vcenterUser":                 "{{env `packer_vcenterUser`}}",
    "vcenterPass":                 "{{env `packer_vcenterPass`}}",
    "cluster":                     "{{env `packer_cluster`}}",
    "datastoreNL":                 "{{env `packer_datastoreNL`}}",
    "datastoreUK":                 "{{env `packer_datastoreUK`}}",
    "datastoreISO":                "{{env `packer_datastoreISO`}}",
    "network":                     "{{env `packer_network`}}",
    "winrmUser":                   "{{vault `credentials/users/misc/administrator` `Username`}}",
    "winrmPass":                   "{{vault `credentials/users/misc/administrator` `Password`}}"
  },
  "builders": [
    {
      "name":                      "Utrecht",
      "type":                      "vsphere-iso",

      "vcenter_server":            "{{user `vcenterNL`}}",
      "username":                  "{{user `vcenterUser`}}",
      "password":                  "{{user `vcenterPass`}}",
      "insecure_connection":       true,

      "vm_name":                   "Windows 10 (20H2)",
      "vm_version":                15,
      "guest_os_type":             "windows9_64Guest",
      "boot_order":                "disk,cdrom",
      "create_snapshot":           true,
      "convert_to_template":       false,

      "cluster":                   "{{user `cluster`}}",
      "CPUs":                      2,
      "RAM":                       8192,
      "RAM_reserve_all":           true,
      "video_ram":                 128000,

      "datastore":                 "{{user `datastoreNL`}}",
      "disk_controller_type":      "pvscsi",
      "storage": [
        {
          "disk_size":             51200,
          "disk_thin_provisioned": true
        }
      ],
      "iso_paths": [
        "[{{user `datastoreISO`}}] en-gb_windows_10_business_editions_version_20h2_x64_dvd_0837542f.iso",
        "[{{user `datastoreISO`}}] VMware-tools-windows-11.2.5-17337674.iso"
      ],
      "floppy_files": [
        "{{template_dir}}/setup/"
      ],
      "remove_cdrom":              true,

      "network_adapters": [
        {
          "network":               "{{user `network`}}",
          "network_card":          "vmxnet3"
        }
      ],

      "notes":                     "Base OS, VMware Tools, patched up to {{isotime \"20060102\"}}",

      "communicator":              "winrm",
      "winrm_username":            "{{user `winrmUser`}}",
      "winrm_password":            "{{user `winrmPass`}}"
    },
    {
      "name":                      "Southport",
      "type":                      "vsphere-iso",

      "vcenter_server":            "{{user `vcenterUK`}}",
      "username":                  "{{user `vcenterUser`}}",
      "password":                  "{{user `vcenterPass`}}",
      "insecure_connection":       true,

      "vm_name":                   "Windows 10 (20H2)",
      "vm_version":                15,
      "guest_os_type":             "windows9_64Guest",
      "boot_order":                "disk,cdrom",
      "create_snapshot":           true,
      "convert_to_template":       false,

      "cluster":                   "{{user `cluster`}}",
      "CPUs":                      2,
      "RAM":                       8192,
      "RAM_reserve_all":           true,
      "video_ram":                 128000,

      "datastore":                 "{{user `datastoreUK`}}",
      "disk_controller_type":      "pvscsi",
      "storage": [
        {
          "disk_size": 51200,
          "disk_thin_provisioned": true
        }
      ],
      "iso_paths": [
        "[{{user `datastoreISO`}}] en-gb_windows_10_business_editions_version_20h2_x64_dvd_0837542f.iso",
        "[{{user `datastoreISO`}}] VMware-tools-windows-11.2.5-17337674.iso"
      ],
      "floppy_files": [
        "{{template_dir}}/setup/"
      ],
      "remove_cdrom":              true,
      
      "network_adapters": [
        {
          "network":               "{{user `network`}}",
          "network_card":          "vmxnet3"
        }
      ],

      "notes":                     "Base OS, VMware Tools, patched up to {{isotime \"20060102\"}}",

      "communicator":              "winrm",
      "winrm_username":            "{{user `winrmUser`}}",
      "winrm_password":            "{{user `winrmPass`}}"
    }
  ],
  "provisioners": [
    {
      "type":                      "powershell",
      "inline": [
        "powercfg.exe /setactive 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c",
        "Get-AppXPackage -AllUsers | Where {($_.name -notlike \"Photos\") -and ($_.Name -notlike \"Calculator\") -and ($_.Name -notlike \"Store\")} | Remove-AppXPackage -ErrorAction SilentlyContinue",
        "Get-AppXProvisionedPackage -Online | Where {($_.DisplayName -notlike \"Photos\") -and ($_.DisplayName -notlike \"Calculator\") -and ($_.DisplayName -notlike \"Store\")} | Remove-AppXProvisionedPackage -Online -ErrorAction SilentlyContinue"
      ]
    },
    {
      "type":                      "powershell",
      "elevated_user":             "{{user `winrmUser`}}",
      "elevated_password":         "{{user `winrmPass`}}",
      "inline": [
        "Get-WindowsCapability -Name RSAT* -Online | Add-WindowsCapability -Online"
      ]
    },
    {
      "type":                      "powershell",
      "scripts": [
        "{{template_dir}}/setup/certs.ps1",
        "{{template_dir}}/setup/bginfo.ps1",
        "{{template_dir}}/setup/agent.ps1",
        "{{template_dir}}/setup/appvolumes.ps1"
      ]
    },
    {
      "type":                      "windows-restart",
      "restart_timeout":           "30m"
    },
    {
      "type":                      "windows-update",
      "search_criteria":           "IsInstalled=0",
      "filters": [
        "exclude:$_.Title -like '*Preview*'",
        "include:$true"
      ]
    },
    {
      "type":                      "powershell",
      "scripts": [
        "{{template_dir}}/setup/osot.ps1",
        "{{template_dir}}/setup/sdelete.ps1"
      ]
    },
    {
      "type":                      "powershell",
      "inline": [
        "Get-EventLog -LogName * | ForEach { Clear-EventLog -LogName $_.Log }"
      ]
    }
  ]
}
